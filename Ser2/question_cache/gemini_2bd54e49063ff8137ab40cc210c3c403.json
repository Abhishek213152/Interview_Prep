{"title": "Island Perimeter with Bridges", "difficulty": "Easy", "category": "graphs", "description": "You are given a representation of an island as an adjacency list where each node represents a landmass and edges represent bridges connecting them.  Each landmass can be connected to multiple other landmasses via bridges. Find the total perimeter of the island, considering that each bridge contributes 0 to the perimeter (it's enclosed) and each edge that does *not* connect to another landmass contributes 2 to the perimeter (it's an exposed edge).", "examples": [{"input": "`{0: [1, 2], 1: [0, 3], 2: [0], 3: [1]}`  (Adjacency List representation of the graph)", "output": "8", "explanation": "Landmass 0 has 3 connections, contributing 0 to the perimeter.  Landmass 1 has 2 connections, contributing 0. Landmass 2 has 1 connection, contributing 2. Landmass 3 has 1 connection, contributing 2. Total perimeter = 0 + 0 + 2 + 2 = 4 * 2 = 8"}, {"input": "`{0: [1, 2, 3], 1: [0, 4], 2: [0], 3: [0], 4: [1]}`", "output": "12", "explanation": "Landmass 0 has 3 connections, contributing 0. Landmass 1 has 2 connections, contributing 0. Landmass 2 has 1 connection, contributing 2. Landmass 3 has 1 connection, contributing 2. Landmass 4 has 1 connection, contributing 2.  Total perimeter = 0 + 0 + 2 + 2 + 2 = 6 * 2 = 12\n\n\nConstraints:\n- The input will be a valid adjacency list representing an undirected graph.\n- The number of nodes (landmasses) will be between 1 and 100.\n- The degree of each node will be between 0 and 100.  (The number of bridges connected to each landmass).\n- Time complexity should be O(V + E), where V is the number of vertices (landmasses) and E is the number of edges (bridges).\n- Space complexity should be O(V)."}], "constraints": ["- The input will be a valid adjacency list representing an undirected graph.", "- The number of nodes (landmasses) will be between 1 and 100.", "- The degree of each node will be between 0 and 100.  (The number of bridges connected to each landmass).", "- Time complexity should be O(V + E), where V is the number of vertices (landmasses) and E is the number of edges (bridges).", "- Space complexity should be O(V)."], "function_signature": {"java": "public int islandPerimeter(Map<Integer, Set<Integer>> adjList) { // Your code here }", "cpp": "int islandPerimeter(const unordered_map<int, unordered_set<int>>& adjList) { // Your code here }", "python": "def island_perimeter(adj_list: dict) -> int: # Your code here\n    pass"}, "id": "2bd54e49063ff8137ab40cc210c3c403"}