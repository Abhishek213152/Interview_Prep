{"title": "Reconstructing Palindromic Strings from Fragments", "difficulty": "Medium", "category": "strings", "description": "You are given a list of strings, where each string is a fragment of a larger palindromic string.  These fragments may overlap.  Your task is to determine if it's possible to reconstruct a single palindromic string using all the fragments, and if so, return the shortest such palindrome.  If multiple shortest palindromes are possible, return any one. If reconstruction is impossible, return an empty string.  Note that the fragments may not be in the correct order, and some characters might be missing from the overall palindrome.", "examples": [{"input": "[\"aba\", \"bab\", \"a\"]", "output": "\"ababa\"", "explanation": "The fragments \"aba\" and \"bab\" overlap to form \"abababa\".  This isn't a palindrome but we can use the \"a\" to make the shortest palindrome \"ababa\"."}, {"input": "[\"race\", \"ecar\", \"ca\"]", "output": "\"racecar\"", "explanation": "\"race\" and \"ecar\" overlap to form \"racecar\", which is a palindrome. The \"ca\" fragment is redundant but doesn't affect the reconstruction."}, {"input": "[\"abc\", \"cba\", \"def\"]", "output": "\"\"", "explanation": "It's impossible to construct a palindrome using these fragments."}, {"input": "[\"a\", \"aa\", \"aaa\"]", "output": "\"aaaaa\"", "explanation": "All fragments can be used to form the palindrome \"aaaaa\".\n\nConstraints:\n- The input list will contain at least one string.\n- Each string in the input list will contain only lowercase English alphabet characters.\n- The length of each string will be between 1 and 10.\n- The total length of all strings in the input list will be less than or equal to 100.\n- Time complexity should be less than O(N^3), where N is the total length of all input strings.  Space complexity should be polynomial."}], "constraints": ["- The input list will contain at least one string.", "- Each string in the input list will contain only lowercase English alphabet characters.", "- The length of each string will be between 1 and 10.", "- The total length of all strings in the input list will be less than or equal to 100.", "- Time complexity should be less than O(N^3), where N is the total length of all input strings.  Space complexity should be polynomial."], "function_signature": {"java": "public String shortestPalindromeReconstruction(List<String> fragments) { // Your code here }", "cpp": "std::string shortestPalindromeReconstruction(const std::vector<std::string>& fragments) { // Your code here }", "python": "def shortest_palindrome_reconstruction(fragments): # Your code here\n    pass"}, "id": "4afd056c1bb8d1a81f00756c490e6e69"}