{"title": "String Segment Repetition", "difficulty": "Easy", "category": "strings", "description": "Given a string `s`, determine if the string can be constructed by repeating a single substring multiple times.  The repeated substring must be at least length 2.  Return `True` if it can be, `False` otherwise.", "examples": [{"input": "\"abababab\"", "output": "True", "explanation": "The string can be constructed by repeating \"ab\" four times."}, {"input": "\"aaaaaa\"", "output": "True", "explanation": "The string can be constructed by repeating \"a\" six times (although the substring length requirement is not met, this specific case is allowed)."}, {"input": "\"abcabcabc\"", "output": "True", "explanation": "The string can be constructed by repeating \"abc\" three times."}, {"input": "\"abcab\"", "output": "False", "explanation": "There's no substring that can be repeated to form the entire string."}, {"input": "\"a\"", "output": "False", "explanation": "The repeating substring must have length at least 2.\n\n\nConstraints:\n- The input string `s` will contain only lowercase English letters.\n- 1 <= len(s) <= 100"}], "constraints": ["- The input string `s` will contain only lowercase English letters.", "- 1 <= len(s) <= 100"], "function_signature": {"java": "public boolean repeatedSubstringPattern(String s) { // Your code here }", "cpp": "bool repeatedSubstringPattern(string s) { // Your code here }", "python": "def repeatedSubstringPattern(s): # Your code here\n    pass"}, "id": "a2a247c25076b347acb0d3500d98e397"}