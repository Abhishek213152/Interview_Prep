{"title": "Longest Subarray with Consecutive Odd Numbers and Bounded Even Numbers", "difficulty": "Medium", "category": "sliding window", "description": "Given an array of integers `nums`, find the length of the longest subarray that satisfies the following conditions:\n\n1.  The subarray contains at least one odd number.\n2.  The number of even numbers in the subarray is less than or equal to `k`.", "examples": [{"input": "`nums = [1, 2, 3, 4, 5, 6, 7, 8, 9], k = 2`", "output": "`5`", "explanation": "The longest subarray satisfying the conditions is `[3, 4, 5, 6, 7]`. It contains 3 odd numbers and 2 even numbers.  `[1,2,3,4,5]` is also valid (length 5)"}, {"input": "`nums = [2, 4, 6, 8, 10], k = 0`", "output": "`0`", "explanation": "There are no odd numbers, so no subarray satisfies the conditions."}, {"input": "`nums = [1, 2, 3, 4, 5, 6, 1, 2, 3, 4], k = 1`", "output": "`6`", "explanation": "The longest subarray is `[3, 4, 5, 6, 1, 2]`  (or other valid 6-length subarrays containing at least one odd and at most 1 even).\n\nConstraints:\n- `1 <= len(nums) <= 10^5`\n- `0 <= nums[i] <= 10^9` for all `i`\n- `0 <= k <= len(nums)`\n- The time complexity should be O(n), where n is the length of `nums`.\n- The space complexity should be O(1)."}], "constraints": ["- `1 <= len(nums) <= 10^5`", "- `0 <= nums[i] <= 10^9` for all `i`", "- `0 <= k <= len(nums)`", "- The time complexity should be O(n), where n is the length of `nums`.", "- The space complexity should be O(1)."], "function_signature": {"java": "public int longestSubarray(int[] nums, int k) { // Your code here }", "cpp": "int longestSubarray(const std::vector<int>& nums, int k) { // Your code here }", "python": "def longest_subarray(nums, k): # Your code here\n    pass"}, "id": "b54b43910dd397eab70e35c8b37783ba"}