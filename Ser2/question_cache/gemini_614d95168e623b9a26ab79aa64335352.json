{"title": "Synchronized Array Pair Sum", "difficulty": "Easy", "category": "two pointers", "description": "Given two sorted integer arrays, `arr1` and `arr2`, of the same length `n`, find the number of pairs (i, j) such that `arr1[i] + arr2[j] == k`, where k is a given target sum.  The indices i and j must satisfy the condition i == j.  In other words, you are only considering pairs where the indices are synchronized between the two arrays.", "examples": [{"input": "arr1 = [1, 3, 5, 7], arr2 = [2, 4, 6, 8], k = 9", "output": "2", "explanation": "The pairs (0, 0) and (1, 1) satisfy the condition since 1 + 2 = 3 (not 9), 3 + 4 = 7 (not 9), 5 + 6 = 11 (not 9), and 7 + 8 = 15 (not 9).  However, the problem asks for pairs with i == j, and the condition should be arr1[i] + arr2[i] == k. Let's correct the example.  The pairs (0,0) (1+2 != 9), (1,1) (3+4 != 9), (2,2) (5+6 !=9), (3,3) (7+8 ==15 !=9). Therefore, there are zero such pairs. Let's change the example to make it easier.  arr1 = [1, 3, 5, 7], arr2 = [8, 6, 4, 2], k = 9.  Then, (0, 0) -> 1 + 8 = 9, (1, 1) -> 3 + 6 = 9, (2, 2) -> 5 + 4 = 9.   (3,3) -> 7 + 2 = 9. Thus there are 2 pairs."}, {"input": "arr1 = [-1, 0, 1, 2], arr2 = [2, 1, 0, -1], k = 1", "output": "2", "explanation": "The pairs (1, 1) and (2, 2) satisfy the condition: 0 + 1 = 1 and 1 + 0 = 1.\n\n\nConstraints:\n- `n` (length of arrays) will be between 1 and 1000 (inclusive).\n- Elements in `arr1` and `arr2` will be between -1000 and 1000 (inclusive).\n- `k` will be between -2000 and 2000 (inclusive).\n- Time complexity should be O(n).\n- Space complexity should be O(1)."}], "constraints": ["- `n` (length of arrays) will be between 1 and 1000 (inclusive).", "- Elements in `arr1` and `arr2` will be between -1000 and 1000 (inclusive).", "- `k` will be between -2000 and 2000 (inclusive).", "- Time complexity should be O(n).", "- Space complexity should be O(1)."], "function_signature": {"java": "public int countPairs(int[] arr1, int[] arr2, int k) { // Your code here }", "cpp": "int countPairs(const std::vector<int>& arr1, const std::vector<int>& arr2, int k) { // Your code here }", "python": "def count_pairs(arr1, arr2, k): # Your code here\n    pass"}, "id": "614d95168e623b9a26ab79aa64335352"}