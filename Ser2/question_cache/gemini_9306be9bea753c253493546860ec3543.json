{"title": "String Segmentation by Vowel Count", "difficulty": "Easy", "category": "strings", "description": "Given a string `s` consisting of lowercase English letters, segment the string into chunks such that each chunk contains the same number of vowels.  Return the number of chunks created. If it's impossible to segment the string satisfying this condition, return -1.  Vowels are 'a', 'e', 'i', 'o', 'u'.", "examples": [{"input": "\"aeioubcde\"", "output": "2", "explanation": "The string can be segmented into \"aeiou\" (5 vowels) and \"bcde\" (0 vowels).  Since both chunks have the same number of vowels (it's ok if the number is 0), we return 2."}, {"input": "\"aeeiouu\"", "output": "1", "explanation": "The string contains 6 vowels.  It can be considered as one chunk."}, {"input": "\"abcde\"", "output": "1", "explanation": "All chunks have 0 vowels."}, {"input": "\"aeioua\"", "output": "-1", "explanation": "It's impossible to divide the string into chunks with the same number of vowels.\n\n\nConstraints:\n- 1 <= len(s) <= 100\n- s contains only lowercase English letters.\n- Time complexity should be O(n), where n is the length of the string.\n- Space complexity should be O(1)."}], "constraints": ["- 1 <= len(s) <= 100", "- s contains only lowercase English letters.", "- Time complexity should be O(n), where n is the length of the string.", "- Space complexity should be O(1)."], "function_signature": {"java": "public int countChunks(String s) { // Your code here }", "cpp": "int countChunks(string s) { // Your code here }", "python": "def count_chunks(s): # Your code here\n    pass"}, "id": "9306be9bea753c253493546860ec3543"}