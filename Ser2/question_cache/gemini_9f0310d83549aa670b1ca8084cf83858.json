{"title": "Array Peak Finder", "difficulty": "Easy", "description": "Given an array of integers `nums`, find the index of the first occurrence of a \"peak\" element.  A peak element is defined as an element that is strictly greater than both its left and right neighbors.  If the array has only one element, that element is considered a peak. If the array has no peak, return -1.  The first and last elements are considered peaks if they satisfy the condition with only one neighbor.", "examples": [{"input": "`[1, 2, 1, 3, 5, 6, 4]`", "output": "`2`", "explanation": "The element 2 at index 2 is a peak because 2 > 1 and 2 > 1 (its neighbors). Note that index 5 (element 6) is also a peak, but we're looking for the first occurrence."}, {"input": "`[1, 5, 3, 2]`", "output": "`1`", "explanation": "5 at index 1 is a peak (5 > 1 and 5 > 3)."}, {"input": "`[9]`", "output": "`0`", "explanation": "A single element array always has a peak at index 0."}, {"input": "`[5,4,3,2,1]`", "output": "`0`", "explanation": "5 at index 0 is a peak (5 > 4)."}, {"input": "`[1,2,3,4,5]`", "output": "`4`", "explanation": "5 at index 4 is a peak (5 > 4)."}, {"input": "`[1,2,3,2,1]`", "output": "`2`\n\nConstraints:\n- `1 <= nums.length <= 10^4`\n- `-10^6 <= nums[i] <= 10^6`\n- Time complexity should be O(n), where n is the length of the array.\n- Space complexity should be O(1).", "explanation": null}], "constraints": ["- `1 <= nums.length <= 10^4`", "- `-10^6 <= nums[i] <= 10^6`", "- Time complexity should be O(n), where n is the length of the array.", "- Space complexity should be O(1)."], "function_signature": {"java": "public int findFirstPeak(int[] nums) { // Your code here }", "cpp": "int findFirstPeak(const std::vector<int>& nums) { // Your code here }", "python": "def find_first_peak(nums): # Your code here\n    pass"}, "id": "9f0310d83549aa670b1ca8084cf83858", "category": "arrays"}