{"title": "Queue-Based Circular Bakery", "difficulty": "Easy", "category": "queues", "description": "A circular bakery has a single queue for ordering. Customers are added to the queue in the order they arrive. However, the bakery has a unique system:  after every `k` customers are served, the next customer in line gets a free pastry!  Given a list of customer names (strings) representing the order of arrival, simulate the bakery's queue system and determine which customers receive free pastries.", "examples": [{"input": "[\"Alice\", \"Bob\", \"Charlie\", \"David\", \"Eve\", \"Frank\", \"Gina\"], k = 3", "output": "[\"Charlie\", \"Gina\"]", "explanation": "Every 3 customers, the next customer gets a free pastry.  Charlie is served after Bob and Alice (3 customers), so Charlie gets a free pastry. Similarly Gina is served after Frank and Eve."}, {"input": "[\"A\", \"B\", \"C\"], k = 1", "output": "[\"B\", \"C\"]", "explanation": "Every 1 customer, the next customer gets a free pastry."}, {"input": "[\"X\"], k = 5", "output": "[]", "explanation": "Not enough customers for anyone to get a free pastry.\n\n\nConstraints:\n- The input list of customer names will contain only strings (non-empty).\n- The value of `k` will be a positive integer.\n- The time complexity should be O(n), where n is the number of customers.\n- The space complexity should be O(n) in the worst case."}], "constraints": ["- The input list of customer names will contain only strings (non-empty).", "- The value of `k` will be a positive integer.", "- The time complexity should be O(n), where n is the number of customers.", "- The space complexity should be O(n) in the worst case."], "function_signature": {"java": "public List<String> getFreePastryRecipients(List<String> customerNames, int k) { // Your code here }", "cpp": "std::vector<std::string> getFreePastryRecipients(const std::vector<std::string>& customerNames, int k) { // Your code here }", "python": "def get_free_pastry_recipients(customer_names, k): # Your code here\n    pass"}, "id": "85b02a19ba584dbf41305a9979352d88"}