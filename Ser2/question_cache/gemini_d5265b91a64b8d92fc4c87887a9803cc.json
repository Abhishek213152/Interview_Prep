{"title": "Array Rotation Minimization", "difficulty": "Medium", "category": "arrays", "description": "Given an array of integers `arr` where each element is unique,  find the minimum number of rotations required to sort the array in ascending order using only right rotations.  A right rotation shifts the last element to the beginning.  The array is considered sorted if it's strictly increasing (i.e.,  `arr[i] < arr[i+1]` for all `0 <= i < n-1`). Note that an already sorted array requires 0 rotations.", "examples": [{"input": "`[5, 3, 1, 2, 4]`", "output": "`3`", "explanation": "- Rotation 1: `[4, 5, 3, 1, 2]`\n   - Rotation 2: `[2, 4, 5, 3, 1]`\n   - Rotation 3: `[1, 2, 4, 5, 3]`\n   - Rotation 4: `[3, 1, 2, 4, 5]`  (Sorted)\n   We need 4 rotations but this isn't optimal as shown below.\n   The optimal solution:\n    -Rotation 1: [4, 5, 3, 1, 2]\n    -Rotation 2: [2, 4, 5, 3, 1]\n    -Rotation 3: [1, 2, 4, 5, 3]\n    This is not sorted\n    Let's start from the largest element:\n   -Find the largest element: 5\n   -Find the index of the largest element: 0 (after the first rotation) or 1 (after second)\n   -The number of rotations is the index of the largest element + 1. In this case we need 3 rotations.\n   [1, 2, 3, 4, 5] - 0 rotations needed."}, {"input": "`[1, 2, 3, 4, 5]`", "output": "`0`", "explanation": "The array is already sorted."}, {"input": "`[3, 1, 2]`", "output": "`2`", "explanation": "- Rotation 1: `[2, 3, 1]`\n   - Rotation 2: `[1, 2, 3]` (Sorted)\n\n\nConstraints:\n- `1 <= len(arr) <= 10^5`\n- `-10^9 <= arr[i] <= 10^9`\n- All elements in `arr` are unique.\n- Time complexity should be O(n log n) or better.  (Hint: Consider using a sorted copy)\n- Space complexity should be O(n) or better."}], "constraints": ["- `1 <= len(arr) <= 10^5`", "- `-10^9 <= arr[i] <= 10^9`", "- All elements in `arr` are unique.", "- Time complexity should be O(n log n) or better.  (Hint: Consider using a sorted copy)", "- Space complexity should be O(n) or better."], "function_signature": {"java": "public int minRightRotations(int[] arr) { // Your code here }", "cpp": "int minRightRotations(const std::vector<int>& arr) { // Your code here }", "python": "def min_right_rotations(arr): # Your code here\n    pass"}, "id": "d5265b91a64b8d92fc4c87887a9803cc"}